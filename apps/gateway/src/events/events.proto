syntax = "proto3";

package events;

service EventsService {
  rpc CreateEvent (CreateEventRequest) returns (CreateEventResponse);
  rpc GetAllEvents (GetAllEventsRequest) returns (GetAllEventsResponse);
  rpc GetEventById (GetEventByIdRequest) returns (GetEventByIdResponse);
  rpc UpdateEvent (UpdateEventRequest) returns (UpdateEventResponse);
  rpc DeleteEvent (DeleteEventRequest) returns (DeleteEventResponse);
}

// 공통 모델
message Event {
  string id = 1;
  string title = 2;
  string description = 3;
  string startDate = 4;
  string endDate = 5;
  bool isActive = 6;
  bool isDeleted = 7;
  int32 minLevel = 8;
  repeated string region = 9;
  string worldType = 10;
  string platform = 11;
  repeated string tags = 12;
  string createdBy = 13;
  repeated string rewardIds = 14;
}

message DslCondition {
  int32 minLevel = 1;
  repeated string region = 2;
  string userType = 3;
}

// 요청 - 응답
// 이벤트 등록 (운영자)
message CreateEventRequest {
  string title = 1;
  string description = 2;
  string startDate = 3;
  string endDate = 4;
  bool isActive = 5;
  repeated string tags = 6;
  string createdBy = 7;
  int32 minLevel = 8;
  repeated string region = 9;
  string worldType = 10;
  string platform = 11;
  repeated string rewardIds = 12;
}

message CreateEventResponse {
  string id = 1;
}

// 이벤트 목록 (운영자)
message GetAllEventsRequest {
  int32 page = 1;
  int32 limit = 2;
}

message GetAllEventsResponse {
  repeated Event events = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

// 이벤트 상세 (운영자)
message GetEventByIdRequest {
  string id = 1;
}

message GetEventByIdResponse {
  Event event = 1;
}

// 이벤트 수정 (운영자)
message UpdateEventRequest {
  string id = 1;
  string title = 2;
  string description = 3;
  string startDate = 4;
  string endDate = 5;
  bool isActive = 6;
  repeated string tags = 7;
  string createdBy = 8;
  int32 minLevel = 9;
  repeated string region = 10;
  string worldType = 11;
  string platform = 12;
  repeated string rewardIds = 13;
}

message UpdateEventResponse {
  Event event = 1;
}

// 이벤트 삭제 (운영자)
message DeleteEventRequest {
  string id = 1;
}

message DeleteEventResponse {
  bool success = 1;
}

message Empty {}