services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093 
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka_data:/bitnami/kafka
    
  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./apps/gateway:/app
      - /app/node_modules
    depends_on:
      - auth
      - event
      - redis

  auth:
    build:
      context: ./apps/auth
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
      - "30001:50051"
    volumes:
      - ./apps/auth:/app
      - /app/node_modules
    depends_on:
      - mongodb

  event:
    build:
      context: ./apps/event
      dockerfile: Dockerfile.dev
    ports:
      - "3002:3000"
      - "30002:50051"
    volumes:
      - ./apps/event:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - kafka

volumes:
  mongo_data: {}
  kafka_data: {}